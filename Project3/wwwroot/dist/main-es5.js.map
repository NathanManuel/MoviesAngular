{"version":3,"sources":["webpack:///src/app/movie/StyleSheet.css","webpack:///src/app/home/home.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/movie/movie-update.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/movie/movie.component.html","webpack:///src/app/movie/movie.service.ts","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/counter/counter.component.html","webpack:///src/app/app.component.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/movie/movie-add.component.ts","webpack:///src/app/movie/movie-add.component.html","webpack:///src/app/movie/movie-update.component.ts","webpack:///src/app/movie/movie.component.ts","webpack:///src/app/movie/movie-addSheet.css","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","selector","template","environment","production","FetchDataComponent","http","baseUrl","get","subscribe","result","forecasts","error","console","CounterComponent","currentCount","MovieService","movie","id","providedIn","NavMenuComponent","isExpanded","AppComponent","title","AppModule","declarations","imports","withServerTransition","appId","forRoot","path","component","pathMatch","providers","bootstrap","MovieAddComponent","router","post","navigateByUrl","MovieUpdateComponent","activatedRoute","queryParams","params","loadMovies","put","MovieComponent","movieService","displayedColumns","deleteMovie","movies","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err","log","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"body {\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0eWxlU2hlZXQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJTdHlsZVNoZWV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"<h1 id=\\\"tableLabel\\\">Update Movie</h1>\\r\\n\\r\\n\\r\\n<table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie name</mat-label>\\r\\n        <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"movie.name\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie Length</mat-label>\\r\\n        <input matInput placeholder=\\\"Length\\\" [(ngModel)]=\\\"movie.movieL\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n\\r\\n</table>\\r\\n\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"updateMovie(movie)\\\">Update movie</button>\\r\\n\";","export default \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\";","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","export default \"<h1 id=\\\"tableLabel\\\">Movie</h1>\\r\\n\\r\\n<p>This component demonstrates movies from the server.</p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/movie-add']\\\">Add Movie</button>\\r\\n\\r\\n<p *ngIf=\\\"!movies\\\"><em>Loading...</em></p>\\r\\n\\r\\n\\r\\n\\r\\n<table mat-table [dataSource]=\\\"movies\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Id </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Movie Length Column -->\\r\\n  <ng-container matColumnDef=\\\"movieL\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Movie Length </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.movieL}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"update\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Update </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> <a matTooltip=\\\"Update {{movie.name}}\\\" class=\\\"btn btn-primary\\\" href=\\\"/movie-update?id={{movie.id}}\\\">Update</a></td>\\r\\n\\r\\n   <!-- <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Update {{movie.name}}\\\" aria-label=\\\"Example icon button with a home icon\\\">\\r\\n      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Examplae\\\" href=\\\"/movie-update?id={{movie.id}}\\\" style=\\\"cursor:pointer\\\">Update</mat-icon>\\r\\n    </button>-->\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"delete\\\">\\r\\n    <th  mat-header-cell *matHeaderCellDef> Delete </th>\\r\\n    <td  mat-cell *matCellDef=\\\"let movie\\\">\\r\\n   <!--   <button mat-icon-button=\\\"\\\" matTooltip=\\\"Delete {{movie.name}}\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteMovie(movie)\\\">Delete</button>\\r\\n    </td>-->\\r\\n\\r\\n  <button class=\\\"btn btn-primary\\\" color=\\\"primary\\\" matTooltip=\\\"Delete {{movie.name}}\\\" aria-label=\\\"Example icon button with a home icon\\\">\\r\\n    <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Examplae\\\" (click)=\\\"deleteMovie(movie)\\\" style=\\\"cursor:pointer\\\">Delete</mat-icon>\\r\\n  </button>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\nimport { Movie } from './movie.models';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\n\n  public loadMovies() {\r\n   return this.http.get<Movie[]>(this.baseUrl + 'api/movies');\r\n  }\n\n  public deleteMovie(movie: Movie) {\r\n   return this.http.delete(this.baseUrl + 'api/movies/' + movie.id);\r\n  }\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Project3</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex justify-content-end\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\">Counter</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\">Fetch data</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/movies']\\\">Movies</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { MovieComponent } from './movie/movie.component';\r\nimport { MovieAddComponent } from './movie/movie-add.component';\r\nimport { MovieUpdateComponent } from './movie/movie-update.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    MovieComponent,\r\n    MovieAddComponent,\r\n    MovieUpdateComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n      { path: 'movies', component: MovieComponent },\r\n      { path: 'movie-add', component: MovieAddComponent },\r\n      { path: 'movie-update', component: MovieUpdateComponent },\r\n    ]),\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdi1tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBQ0E7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLDhDQUE4QztBQUNoRCIsImZpbGUiOiJuYXYtbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYS5uYXZiYXItYnJhbmQge1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIGh0bWwge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJveC1zaGFkb3cge1xyXG4gIGJveC1zaGFkb3c6IDAgLjI1cmVtIC43NXJlbSByZ2JhKDAsIDAsIDAsIC4wNSk7XHJcbn1cclxuIl19 */\";","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movie.models';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie-add',\r\n  templateUrl: './movie-add.component.html',\r\n  styleUrls: ['movie-addSheet.css']\r\n})\r\nexport class MovieAddComponent {\r\n\r\n  public movie: Movie = <Movie>{};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router) {\r\n  }\r\n  public saveMovie() {\r\n    this.http.post(this.baseUrl + 'api/movies', this.movie).subscribe(result => {\r\n    this.router.navigateByUrl(\"/movies\");\r\n    }, error => console.error(error));\r\n  }\r\n\r\n \r\n}\r\n\r\n","export default \"<h1 id=\\\"tableLabel\\\">Add movie</h1>\\r\\n\\r\\n\\r\\n<table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie name</mat-label>\\r\\n        <input matInput  placeholder=\\\"Name\\\" [(ngModel)]=\\\"movie.name\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie Length</mat-label>\\r\\n        <input matInput placeholder=\\\"Length\\\" [(ngModel)]=\\\"movie.movieL\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n \\r\\n</table>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"saveMovie()\\\">Save Movie</button>\\r\\n\";","import { Component, Inject,OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movie.models';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie-update',\r\n  templateUrl: './movie-update.component.html',\r\n  styleUrls: ['movie-addSheet.css']\r\n})\r\nexport class MovieUpdateComponent implements OnInit {\r\n  public id: string;\r\n  public movie: Movie = <Movie>{};\r\n\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadMovies();\r\n    });\r\n  }\r\n\r\n  public loadMovies(){\r\n  this.http.get<Movie>(this.baseUrl + 'api/movies/' + this.id).subscribe(result => {\r\n    this.movie = result;\r\n  }, error => console.error(error));\r\n}\r\n  public updateMovie() {\r\n    this.http.put(this.baseUrl + 'api/movies/' + this.id,this.movie).subscribe(result => {\r\n      this.router.navigateByUrl(\"/movies\")\r\n    }, error => console.error(error))\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n \r\n\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movie.models';\r\nimport { MovieService } from './movie.service';\r\n\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: [\"StyleSheet.css\"]\r\n})\r\nexport class MovieComponent {\r\n  public movies: Movie[];\r\n  displayedColumns: string[] = ['id', 'name', 'movieL', 'update', 'delete'];\r\n\r\n  constructor(private movieService: MovieService) {\r\n    this.loadMovies();\r\n  }\r\n  public deleteMovie(movie: Movie) {\r\n    this.movieService.deleteMovie(movie).subscribe(result => {\r\n      this.loadMovies();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public loadMovies() {\r\n    this.movieService.loadMovies().subscribe(result => {\r\n      this.movies = result;\r\n    }, error => console.error(error));\r\n}\r\n\r\n \r\n}\r\n","export default \"body {\\r\\n}\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllLWFkZFNoZWV0LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjtBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6Im1vdmllLWFkZFNoZWV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\";","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}