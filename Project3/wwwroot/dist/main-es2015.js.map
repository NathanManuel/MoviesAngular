{"version":3,"sources":["./src/app/movie/StyleSheet.css","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/movie/movie-update.component.html","./src/app/home/home.component.html","./src/app/fetch-data/fetch-data.component.ts","./src/app/counter/counter.component.ts","./src/app/movie/movie.component.html","./src/app/movie/movie.service.ts","./src/app/nav-menu/nav-menu.component.ts","./src/app/app.component.ts","./src/app/counter/counter.component.html","./src/app/app.component.html","./src/app/fetch-data/fetch-data.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/app.module.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/movie/movie-add.component.ts","./src/app/movie/movie-add.component.html","./src/app/movie/movie-update.component.ts","./src/app/movie/movie.component.ts","./src/app/movie/movie-addSheet.css","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe,sEAAO,KAAK,WAAW,kBAAkB,KAAK,mDAAmD,2QAA2Q,E;;;;;;;;;;;;;;;;;;;;;;;ACAjV;IAM7B,aAAa,SAAb,aAAa;CACzB;AADY,aAAa;IAJzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iFAAoC;KACrC,CAAC;GACW,aAAa,CACzB;AADyB;;;;;;;;;;;;;ACN1B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAe,4xBAA6tB,E;;;;;;;;;;;;ACA5uB;AAAe,mjDAAo/C,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj9C;AACA;IAMrC,kBAAkB,SAAlB,kBAAkB;IAG7B,YAAY,IAAgB,EAAsB,OAAe;QAC/D,IAAI,CAAC,GAAG,CAAoB,OAAO,GAAG,iBAAiB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1E,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;CACF;;YAdQ,+DAAU;yCASc,oDAAM,SAAC,UAAU;;AAHrC,kBAAkB;IAJ9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;KAC3C,CAAC;qCAIkB,+DAAU;GAHjB,kBAAkB,CAQ9B;AAR8B;;;;;;;;;;;;;;;;;;;;;;;;ACPW;IAM7B,gBAAgB,SAAhB,gBAAgB;;QACpB,iBAAY,GAAG,CAAC,CAAC;IAK1B,CAAC;IAHQ,gBAAgB;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;CACF;AANY,gBAAgB;IAJ5B,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,oFAAuC;KACxC,CAAC;GACW,gBAAgB,CAM5B;AAN4B;;;;;;;;;;;;;ACN7B;AAAe,ktBAAmpB,UAAU,8MAA8M,YAAY,gOAAgO,cAAc,+MAA+M,YAAY,uDAAuD,UAAU,kGAAkG,YAAY,mJAAmJ,UAAU,mTAAmT,YAAY,+KAA+K,YAAY,mVAAmV,2BAA2B,yBAAyB,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA1+E;AACC;IAMtC,YAAY,SAAZ,YAAY;IAEvB,YAAoB,IAAgB,EAA8B,OAAe;QAA7D,SAAI,GAAJ,IAAI,CAAY;QAA8B,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAE/E,UAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC;IAC5D,CAAC;IAEM,WAAW,CAAC,KAAY;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;CAEF;;YAnBQ,+DAAU;yCASsB,oDAAM,SAAC,UAAU;;AAF7C,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;qCAG0B,+DAAU;GAFzB,YAAY,CAYxB;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;IAO7B,gBAAgB,SAAhB,gBAAgB;;QAC3B,eAAU,GAAG,KAAK,CAAC;IASrB,CAAC;IAPC,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;CACF;AAVY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;GACW,gBAAgB,CAU5B;AAV4B;;;;;;;;;;;;;;;;;;;;;;;;ACPa;IAM7B,YAAY,SAAZ,YAAY;;QACvB,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;CAAA;AAFY,YAAY;IAJxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;KACpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;ACNzB;AAAe,yMAA0I,gBAAgB,6GAA6G,E;;;;;;;;;;;;ACAtR;AAAe,2MAA4I,E;;;;;;;;;;;;ACA3J;AAAe,ojBAAqf,iBAAiB,qBAAqB,yBAAyB,qBAAqB,yBAAyB,qBAAqB,oBAAoB,iDAAiD,E;;;;;;;;;;;;ACA3sB;AAAe,6xBAA8tB,mBAAmB,uMAAuM,cAAc,8tBAA8tB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAznD;AACjB;AACI;AACW;AACT;AACU;AACA;AACI;AAEd;AACkB;AACX;AACS;AACQ;AACd;AACO;AACM;AACS;IAiClE,SAAS,SAAT,SAAS;CAAI;AAAb,SAAS;IA/BrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,6EAAgB;YAChB,mEAAa;YACb,4EAAgB;YAChB,oFAAkB;YAClB,sEAAc;YACd,6EAAiB;YACjB,mFAAoB;SACrB;QACD,OAAO,EAAE;YACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;YACjE,qEAAgB;YAChB,0DAAW;YACX,sEAAc;YACd,sEAAc;YACd,0EAAgB;YAChB,4DAAY,CAAC,OAAO,CAAC;gBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAa,EAAE,SAAS,EAAE,MAAM,EAAE;gBACzD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4EAAgB,EAAE;gBAChD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oFAAkB,EAAE;gBACrD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sEAAc,EAAE;gBAC7C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6EAAiB,EAAE;gBACnD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mFAAoB,EAAE;aAC1D,CAAC;YACF,6FAAuB;SACxB;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;AClDtB;AAAe,gFAAiB,0BAA0B,yBAAyB,4BAA4B,KAAK,cAAc,sBAAsB,KAAK,mCAAmC,YAAY,wBAAwB,OAAO,KAAK,qBAAqB,qDAAqD,KAAK,mDAAmD,mvBAAmvB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnjC;AACA;AAET;IAO5B,iBAAiB,SAAjB,iBAAiB;IAI5B,YACU,IAAgB,EACI,OAAe,EACnC,MAAc;QAFd,SAAI,GAAJ,IAAI,CAAY;QACI,YAAO,GAAP,OAAO,CAAQ;QACnC,WAAM,GAAN,MAAM,CAAQ;QALjB,UAAK,GAAiB,EAAE,CAAC;IAMhC,CAAC;IACM,SAAS;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC3E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;CAGF;;YAzBQ,+DAAU;yCAed,oDAAM,SAAC,UAAU;YAbb,sDAAM;;AAOF,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;;KAE1C,CAAC;qCAMgB,+DAAU,UAER,sDAAM;GAPb,iBAAiB,CAgB7B;AAhB6B;;;;;;;;;;;;;ACV9B;AAAe,8wBAA+sB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArqB;AACP;AAEO;IAO5C,oBAAoB,SAApB,oBAAoB;IAI/B,YAAoB,IAAgB,EACN,OAAe,EACnC,MAAc,EAAU,cAA8B;QAF5C,SAAI,GAAJ,IAAI,CAAY;QACN,YAAO,GAAP,OAAO,CAAQ;QACnC,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAJzD,UAAK,GAAiB,EAAE,CAAC;IAIoC,CAAC;IAErE,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,UAAU;QACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9E,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IACQ,WAAW;QAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC;QACtC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;CAGA;;YApCQ,+DAAU;yCAcd,oDAAM,SAAC,UAAU;YAZb,sDAAM;YAAE,8DAAc;;AAOlB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;qCAK0B,+DAAU,UAElB,sDAAM,EAA0B,8DAAc;GANrD,oBAAoB,CA2BhC;AA3BgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViB;AAGH;IAOlC,cAAc,SAAd,cAAc;IAIzB,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAF9C,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAGxE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACM,WAAW,CAAC,KAAY;QAC7B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC;CAGA;;YA3BQ,2DAAY;;AAOR,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kFAAqC;;KAEtC,CAAC;qCAKkC,2DAAY;GAJnC,cAAc,CAoB1B;AApB0B;;;;;;;;;;;;;ACV3B;AAAe,sEAAO,KAAK,mBAAmB,uBAAuB,uBAAuB,kBAAkB,KAAK,yBAAyB,kBAAkB,KAAK,mDAAmD,+dAA+d,E;;;;;;;;;;;;ACArrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAElD,SAAS,UAAU;IACxB,OAAO,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD,CAAC;AAED,MAAM,SAAS,GAAG;IAChB,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;CAC1D,CAAC;AAEF,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,yDAAS,CAAC;KACzD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACnBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["export default \"body {\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0eWxlU2hlZXQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJTdHlsZVNoZWV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"<h1 id=\\\"tableLabel\\\">Update Movie</h1>\\r\\n\\r\\n\\r\\n<table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie name</mat-label>\\r\\n        <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"movie.name\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie Length</mat-label>\\r\\n        <input matInput placeholder=\\\"Length\\\" [(ngModel)]=\\\"movie.movieL\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n\\r\\n</table>\\r\\n\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"updateMovie(movie)\\\">Update movie</button>\\r\\n\";","export default \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\";","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","export default \"<h1 id=\\\"tableLabel\\\">Movie</h1>\\r\\n\\r\\n<p>This component demonstrates movies from the server.</p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/movie-add']\\\">Add Movie</button>\\r\\n\\r\\n<p *ngIf=\\\"!movies\\\"><em>Loading...</em></p>\\r\\n\\r\\n\\r\\n\\r\\n<table mat-table [dataSource]=\\\"movies\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Id </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.id}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Movie Length Column -->\\r\\n  <ng-container matColumnDef=\\\"movieL\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Movie Length </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> {{movie.movieL}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"update\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Update </th>\\r\\n    <td mat-cell *matCellDef=\\\"let movie\\\"> <a matTooltip=\\\"Update {{movie.name}}\\\" class=\\\"btn btn-primary\\\" href=\\\"/movie-update?id={{movie.id}}\\\">Update</a></td>\\r\\n\\r\\n   <!-- <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Update {{movie.name}}\\\" aria-label=\\\"Example icon button with a home icon\\\">\\r\\n      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Examplae\\\" href=\\\"/movie-update?id={{movie.id}}\\\" style=\\\"cursor:pointer\\\">Update</mat-icon>\\r\\n    </button>-->\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"delete\\\">\\r\\n    <th  mat-header-cell *matHeaderCellDef> Delete </th>\\r\\n    <td  mat-cell *matCellDef=\\\"let movie\\\">\\r\\n   <!--   <button mat-icon-button=\\\"\\\" matTooltip=\\\"Delete {{movie.name}}\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteMovie(movie)\\\">Delete</button>\\r\\n    </td>-->\\r\\n\\r\\n  <button class=\\\"btn btn-primary\\\" color=\\\"primary\\\" matTooltip=\\\"Delete {{movie.name}}\\\" aria-label=\\\"Example icon button with a home icon\\\">\\r\\n    <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Examplae\\\" (click)=\\\"deleteMovie(movie)\\\" style=\\\"cursor:pointer\\\">Delete</mat-icon>\\r\\n  </button>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\nimport { Movie } from './movie.models';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\n\n  public loadMovies() {\r\n   return this.http.get<Movie[]>(this.baseUrl + 'api/movies');\r\n  }\n\n  public deleteMovie(movie: Movie) {\r\n   return this.http.delete(this.baseUrl + 'api/movies/' + movie.id);\r\n  }\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Project3</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex justify-content-end\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\">Counter</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\">Fetch data</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/movies']\\\">Movies</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { MovieComponent } from './movie/movie.component';\r\nimport { MovieAddComponent } from './movie/movie-add.component';\r\nimport { MovieUpdateComponent } from './movie/movie-update.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    MovieComponent,\r\n    MovieAddComponent,\r\n    MovieUpdateComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n      { path: 'movies', component: MovieComponent },\r\n      { path: 'movie-add', component: MovieAddComponent },\r\n      { path: 'movie-update', component: MovieUpdateComponent },\r\n    ]),\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdi1tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBQ0E7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLDhDQUE4QztBQUNoRCIsImZpbGUiOiJuYXYtbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYS5uYXZiYXItYnJhbmQge1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIGh0bWwge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJveC1zaGFkb3cge1xyXG4gIGJveC1zaGFkb3c6IDAgLjI1cmVtIC43NXJlbSByZ2JhKDAsIDAsIDAsIC4wNSk7XHJcbn1cclxuIl19 */\";","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movie.models';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie-add',\r\n  templateUrl: './movie-add.component.html',\r\n  styleUrls: ['movie-addSheet.css']\r\n})\r\nexport class MovieAddComponent {\r\n\r\n  public movie: Movie = <Movie>{};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router) {\r\n  }\r\n  public saveMovie() {\r\n    this.http.post(this.baseUrl + 'api/movies', this.movie).subscribe(result => {\r\n    this.router.navigateByUrl(\"/movies\");\r\n    }, error => console.error(error));\r\n  }\r\n\r\n \r\n}\r\n\r\n","export default \"<h1 id=\\\"tableLabel\\\">Add movie</h1>\\r\\n\\r\\n\\r\\n<table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie name</mat-label>\\r\\n        <input matInput  placeholder=\\\"Name\\\" [(ngModel)]=\\\"movie.name\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Movie Length</mat-label>\\r\\n        <input matInput placeholder=\\\"Length\\\" [(ngModel)]=\\\"movie.movieL\\\" />\\r\\n      </mat-form-field>\\r\\n    </td>\\r\\n  </tr>\\r\\n \\r\\n</table>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"saveMovie()\\\">Save Movie</button>\\r\\n\";","import { Component, Inject,OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movie.models';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie-update',\r\n  templateUrl: './movie-update.component.html',\r\n  styleUrls: ['movie-addSheet.css']\r\n})\r\nexport class MovieUpdateComponent implements OnInit {\r\n  public id: string;\r\n  public movie: Movie = <Movie>{};\r\n\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadMovies();\r\n    });\r\n  }\r\n\r\n  public loadMovies(){\r\n  this.http.get<Movie>(this.baseUrl + 'api/movies/' + this.id).subscribe(result => {\r\n    this.movie = result;\r\n  }, error => console.error(error));\r\n}\r\n  public updateMovie() {\r\n    this.http.put(this.baseUrl + 'api/movies/' + this.id,this.movie).subscribe(result => {\r\n      this.router.navigateByUrl(\"/movies\")\r\n    }, error => console.error(error))\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n \r\n\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from './movie.models';\r\nimport { MovieService } from './movie.service';\r\n\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: [\"StyleSheet.css\"]\r\n})\r\nexport class MovieComponent {\r\n  public movies: Movie[];\r\n  displayedColumns: string[] = ['id', 'name', 'movieL', 'update', 'delete'];\r\n\r\n  constructor(private movieService: MovieService) {\r\n    this.loadMovies();\r\n  }\r\n  public deleteMovie(movie: Movie) {\r\n    this.movieService.deleteMovie(movie).subscribe(result => {\r\n      this.loadMovies();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public loadMovies() {\r\n    this.movieService.loadMovies().subscribe(result => {\r\n      this.movies = result;\r\n    }, error => console.error(error));\r\n}\r\n\r\n \r\n}\r\n","export default \"body {\\r\\n}\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllLWFkZFNoZWV0LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjtBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6Im1vdmllLWFkZFNoZWV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\";","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}